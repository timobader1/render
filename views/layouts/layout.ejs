<!DOCTYPE html>
<html>

<head>
  <meta name="description" content="Author: Patrick Peltzner / Timo Bader">
  <title>TurboParts24</title>

  <!-- Viewport mobile tag for sensible mobile support -->
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1" charset="UTF-8">

  <% /* If you want to discourage search engines from indexing this site, uncomment the following line: */%>
    <% /* <meta name="robots" content="noindex"> */%>


      <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

      <!--STYLES-->
      <link rel="stylesheet" href="/dependencies/bootstrap.css">
      <link rel="stylesheet" href="/dependencies/vuetify.min.css">
      <link rel="stylesheet" href="/styles/importer.css">
      <link rel="stylesheet" href="/styles/style.min.css">
      <!--STYLES END-->
</head>

<body class="d-flex flex-column">

  <header>
    <nav class="navbar navbar-expand-lg w-100 nav-fill navbar-light" style=" background-color: white;">
      <div class="container-fluid">
        <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasNavbar"
          aria-controls="offcanvasNavbar" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasNavbar" aria-labelledby="offcanvasNavbarLabel">
          <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="offcanvasNavbarLabel">Menü</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <ul class="navbar-nav justify-content-end flex-grow-1 pe-3">
              <!-- LOGGED-IN NAVIGATION -->
              <% if(req.me) { %>
                <li class="nav-item">
                  <a class="nav-link" href="/Home">Start</a>
                </li>
                <li class="nav-item">
                  <a class="nav-link" href="/Suche">Suche</a>
                </li>
                <li class="nav-item">
                  <a class="nav-link" href="/Suche#/basket">Warenkorb</a>
                </li>
                <!-- Added Block für Super user Navigation-->
                <% if(req.me.isSuperAdmin) { %>
                  <li class="nav-item">
                    <a class="nav-link" href="/Admin">Admin</a>
                  </li>
                  <% } %>
                    <% if(req.me.isSellerOrAdmin) { %>
                      <li class="nav-item">
                        <a class="nav-link" href="/Products">Produkte</a>
                      </li>
                      <% } %>
                        <li class="nav-item">
                          <a class="nav-link" href="UeberUns">Über uns</a>
                        </li>
                        <li class="nav-item">
                          <a class="nav-link" href="/Impressum">Impressum</a>
                        </li>
                        <li class="nav-item">
                          <a class="nav-link" href="/Profil">Profil</a>
                        </li>
                        <li class="nav-item">
                          <a class="nav-link" href="/Abmelden">Abmelden</a>
                        </li>
                        <% } else { %>
                          <!-- LOGGED-OUT NAVIGATION -->
                          <li class="nav-item">
                            <a class="nav-link" href="/Home">Start</a>
                          </li>
                          <li class="nav-item">
                            <a class="nav-link" href="/Suche">Suche</a>
                          </li>
                          <li class="nav-item">
                            <a class="nav-link" href="/UeberUns">Über uns</a>
                          </li>
                          <li class="nav-item">
                            <a class="nav-link" href="/Impressum">Impressum</a>
                          </li>
                          <li class="nav-item">
                            <a class="nav-link" href="/Anmelden">Anmelden</a>
                          </li>
                          <% } %>
            </ul>
          </div>
        </div>
      </div>
    </nav>
  </header>

  <main class="flex-fill">
    <%- body %>
  </main>

  <footer class="container-fluid m-0">
    <div class="row">
      <div class="col d-flex justify-content-center">
        <input type="image" src="/images/st-Instagram 1.svg" alt="" class="btTxt submit" />
      </div>
      <div class="col d-flex justify-content-center">

        <input type="image" src="/images/st-youtube 1.svg" alt="youtube" class="btTxt submit" />

      </div>
      <div class="col d-flex justify-content-center">

        <input type="image" src="/images/st-twitter 1.svg" alt="twitter" class="btTxt submit" />

      </div>
      <div class="col d-flex justify-content-center">

        <input type="image" src="/images/svg-logistics 1.svg" alt="logistics" class="btTxt submit" />
      </div>
    </div>
  </footer>





  <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like React, Vue.js, Angular, Ember, and Backbone
        require that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different view engine (handlebars, dust, pug/jade, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

  <!--TEMPLATES-->
  <!--TEMPLATES END-->


  <!--
        Server-side View Locals
        ========================

        Sometimes, it's convenient to get access to your server-side view locals from
        client-side JavaScript.  This can improve page load times, remove the need for
        extra AJAX requests, and make your client-side code easier to understand and
        to maintain.  Sails provides a simple mechanism for accessing dynamic view
        locals: the "exposeLocalsToBrowser()" view partial.

        For more information on using this built-in feature, see:
        https://sailsjs.com/docs/concepts/views/locals#?escaping-untrusted-data-using-exposelocalstobrowser

    -->


  <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->
  <!--SCRIPTS-->
  <script src="/dependencies/sails.io.js"></script>
  <script src="/dependencies/vue.global.js"></script>
  <script src="/dependencies/vue-router.global.js"></script>
  <script src="/dependencies/bootstrapjs.js"></script>
  <script src="/dependencies/vuetify.min.js"></script>
  <!--SCRIPTS END-->

</body>

</html>